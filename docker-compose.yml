version: "3.8"
services:
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - business
      - search
      - auth
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 3s
      timeout: 10s
      retries: 3
  business:
    build: ./business
    container_name: business
    volumes:
      - ./business:/usr/src/app
    depends_on:
      - business-postgres
      - rabbitmq
    links:
      - rabbitmq
      - business-postgres

  business-postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotel
    volumes:
      - ./pgdata:/var/lib/postgres/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 3s
      timeout: 10s
      retries: 3
  search:
    build: ./search
    container_name: search
    volumes:
      - ./search:/usr/src/app
    depends_on:
      - rabbitmq
      - geohash
      - business-info
    links:
      - rabbitmq

  geohash:
    image: redis:6.2-alpine
    restart: always
    volumes:
      - ./redis-data:/data
  business-info:
    image: redis:6.2-alpine
    restart: always
    volumes:
      - ./redis-data:/data
  auth:
    build: ./auth
    container_name: auth
    ports:
      - "7000:7000"
    volumes:
      - ./auth:/usr/src/app
    depends_on:
      - auth-postgres
      - rabbitmq
  auth-postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - ./pgdata2:/var/lib/postgres/data
  auth-redis:
    image: redis:6.2-alpine
    restart: always
    volumes:
      - ./redis-data:/data
